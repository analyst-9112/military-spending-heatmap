{"ast":null,"code":"import React, { useMemo, createElement, Fragment } from 'react';\nimport { useTheme, usePropertyAccessor, useValueFormatter, Container, useDimensions, bindDefs, SvgWrapper, ResponsiveWrapper } from '@nivo/core';\nimport { useArcGenerator, ArcsLayer, ArcLabelsLayer } from '@nivo/arcs';\nimport { BasicTooltip, useTooltip } from '@nivo/tooltip';\nimport { hierarchy, partition } from 'd3-hierarchy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport sortBy from 'lodash/sortBy';\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar SunburstTooltip = function SunburstTooltip(_ref) {\n  var id = _ref.id,\n      formattedValue = _ref.formattedValue,\n      color = _ref.color;\n  return React.createElement(BasicTooltip, {\n    id: id,\n    value: formattedValue,\n    enableChip: true,\n    color: color\n  });\n};\n\nvar defaultProps = {\n  id: 'id',\n  value: 'value',\n  cornerRadius: 0,\n  layers: ['arcs', 'arcLabels'],\n  colors: {\n    scheme: 'nivo'\n  },\n  colorBy: 'id',\n  inheritColorFromParent: true,\n  childColor: {\n    from: 'color'\n  },\n  borderWidth: 1,\n  borderColor: 'white',\n  enableArcLabels: false,\n  arcLabel: 'formattedValue',\n  arcLabelsRadiusOffset: 0.5,\n  arcLabelsSkipAngle: 0,\n  arcLabelsTextColor: {\n    theme: 'labels.text.fill'\n  },\n  animate: true,\n  motionConfig: 'gentle',\n  transitionMode: 'innerRadius',\n  isInteractive: true,\n  defs: [],\n  fill: [],\n  tooltip: SunburstTooltip,\n  role: 'img'\n};\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nvar useSunburst = function useSunburst(_ref) {\n  var data = _ref.data,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultProps.id : _ref$id,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultProps.value : _ref$value,\n      valueFormat = _ref.valueFormat,\n      radius = _ref.radius,\n      _ref$cornerRadius = _ref.cornerRadius,\n      cornerRadius = _ref$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref$cornerRadius,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultProps.colors : _ref$colors,\n      _ref$colorBy = _ref.colorBy,\n      colorBy = _ref$colorBy === void 0 ? defaultProps.colorBy : _ref$colorBy,\n      _ref$inheritColorFrom = _ref.inheritColorFromParent,\n      inheritColorFromParent = _ref$inheritColorFrom === void 0 ? defaultProps.inheritColorFromParent : _ref$inheritColorFrom,\n      _ref$childColor = _ref.childColor,\n      childColor = _ref$childColor === void 0 ? defaultProps.childColor : _ref$childColor;\n  var theme = useTheme();\n  var getColor = useOrdinalColorScale(colors, colorBy);\n  var getChildColor = useInheritedColor(childColor, theme);\n  var getId = usePropertyAccessor(id);\n  var getValue = usePropertyAccessor(value);\n  var formatValue = useValueFormatter(valueFormat);\n  var nodes = useMemo(function () {\n    var _hierarchy$value;\n\n    var clonedData = cloneDeep(data);\n    var hierarchy$1 = hierarchy(clonedData).sum(getValue);\n    var partition$1 = partition().size([2 * Math.PI, radius * radius]);\n    var descendants = partition$1(hierarchy$1).descendants().slice(1);\n    var total = (_hierarchy$value = hierarchy$1.value) !== null && _hierarchy$value !== void 0 ? _hierarchy$value : 0;\n    var sortedNodes = sortBy(descendants, 'depth');\n    return sortedNodes.reduce(function (acc, descendant) {\n      var id = getId(descendant.data);\n      var value = descendant.value;\n      var percentage = 100 * value / total;\n      var path = descendant.ancestors().map(function (ancestor) {\n        return getId(ancestor.data);\n      });\n      var arc = {\n        startAngle: descendant.x0,\n        endAngle: descendant.x1,\n        innerRadius: Math.sqrt(descendant.y0),\n        outerRadius: Math.sqrt(descendant.y1)\n      };\n      var parent;\n\n      if (descendant.parent) {\n        parent = acc.find(function (node) {\n          return node.id === getId(descendant.parent.data);\n        });\n      }\n\n      var normalizedNode = {\n        id: id,\n        path: path,\n        value: value,\n        percentage: percentage,\n        formattedValue: valueFormat ? formatValue(value) : \"\".concat(percentage.toFixed(2), \"%\"),\n        color: '',\n        arc: arc,\n        data: descendant.data,\n        depth: descendant.depth,\n        height: descendant.height\n      };\n\n      if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n        normalizedNode.color = getChildColor(parent);\n      } else {\n        normalizedNode.color = getColor(normalizedNode);\n      }\n\n      return [].concat(_toConsumableArray(acc), [normalizedNode]);\n    }, []);\n  }, [data, radius, getValue, getId, valueFormat, formatValue, getColor, inheritColorFromParent, getChildColor]);\n  var arcGenerator = useArcGenerator({\n    cornerRadius: cornerRadius\n  });\n  return {\n    arcGenerator: arcGenerator,\n    nodes: nodes\n  };\n};\n\nvar useSunburstLayerContext = function useSunburstLayerContext(_ref2) {\n  var nodes = _ref2.nodes,\n      arcGenerator = _ref2.arcGenerator,\n      centerX = _ref2.centerX,\n      centerY = _ref2.centerY,\n      radius = _ref2.radius;\n  return useMemo(function () {\n    return {\n      nodes: nodes,\n      arcGenerator: arcGenerator,\n      centerX: centerX,\n      centerY: centerY,\n      radius: radius\n    };\n  }, [nodes, arcGenerator, centerX, centerY, radius]);\n};\n\nvar Arcs = function Arcs(_ref) {\n  var center = _ref.center,\n      data = _ref.data,\n      arcGenerator = _ref.arcGenerator,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      tooltip = _ref.tooltip,\n      transitionMode = _ref.transitionMode;\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleClick = useMemo(function () {\n    if (!isInteractive) return undefined;\n    return function (datum, event) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(datum, event);\n    };\n  }, [isInteractive, onClick]);\n  var handleMouseEnter = useMemo(function () {\n    if (!isInteractive) return undefined;\n    return function (datum, event) {\n      showTooltipFromEvent(createElement(tooltip, datum), event);\n      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(datum, event);\n    };\n  }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter]);\n  var handleMouseMove = useMemo(function () {\n    if (!isInteractive) return undefined;\n    return function (datum, event) {\n      showTooltipFromEvent(createElement(tooltip, datum), event);\n      onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(datum, event);\n    };\n  }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove]);\n  var handleMouseLeave = useMemo(function () {\n    if (!isInteractive) return undefined;\n    return function (datum, event) {\n      hideTooltip();\n      onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(datum, event);\n    };\n  }, [isInteractive, hideTooltip, onMouseLeave]);\n  return React.createElement(ArcsLayer, {\n    center: center,\n    data: data,\n    arcGenerator: arcGenerator,\n    borderWidth: borderWidth,\n    borderColor: borderColor,\n    transitionMode: transitionMode,\n    onClick: handleClick,\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave\n  });\n};\n\nvar InnerSunburst = function InnerSunburst(_ref) {\n  var data = _ref.data,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultProps.id : _ref$id,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultProps.value : _ref$value,\n      valueFormat = _ref.valueFormat,\n      _ref$cornerRadius = _ref.cornerRadius,\n      cornerRadius = _ref$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref$cornerRadius,\n      _ref$layers = _ref.layers,\n      layers = _ref$layers === void 0 ? defaultProps.layers : _ref$layers,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultProps.colors : _ref$colors,\n      _ref$colorBy = _ref.colorBy,\n      colorBy = _ref$colorBy === void 0 ? defaultProps.colorBy : _ref$colorBy,\n      _ref$inheritColorFrom = _ref.inheritColorFromParent,\n      inheritColorFromParent = _ref$inheritColorFrom === void 0 ? defaultProps.inheritColorFromParent : _ref$inheritColorFrom,\n      _ref$childColor = _ref.childColor,\n      childColor = _ref$childColor === void 0 ? defaultProps.childColor : _ref$childColor,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? defaultProps.borderWidth : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? defaultProps.borderColor : _ref$borderColor,\n      partialMargin = _ref.margin,\n      width = _ref.width,\n      height = _ref.height,\n      _ref$enableArcLabels = _ref.enableArcLabels,\n      enableArcLabels = _ref$enableArcLabels === void 0 ? defaultProps.enableArcLabels : _ref$enableArcLabels,\n      _ref$arcLabel = _ref.arcLabel,\n      arcLabel = _ref$arcLabel === void 0 ? defaultProps.arcLabel : _ref$arcLabel,\n      _ref$arcLabelsRadiusO = _ref.arcLabelsRadiusOffset,\n      arcLabelsRadiusOffset = _ref$arcLabelsRadiusO === void 0 ? defaultProps.arcLabelsRadiusOffset : _ref$arcLabelsRadiusO,\n      _ref$arcLabelsSkipAng = _ref.arcLabelsSkipAngle,\n      arcLabelsSkipAngle = _ref$arcLabelsSkipAng === void 0 ? defaultProps.arcLabelsSkipAngle : _ref$arcLabelsSkipAng,\n      _ref$arcLabelsTextCol = _ref.arcLabelsTextColor,\n      arcLabelsTextColor = _ref$arcLabelsTextCol === void 0 ? defaultProps.arcLabelsTextColor : _ref$arcLabelsTextCol,\n      arcLabelsComponent = _ref.arcLabelsComponent,\n      _ref$defs = _ref.defs,\n      defs = _ref$defs === void 0 ? defaultProps.defs : _ref$defs,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? defaultProps.fill : _ref$fill,\n      _ref$transitionMode = _ref.transitionMode,\n      transitionMode = _ref$transitionMode === void 0 ? defaultProps.transitionMode : _ref$transitionMode,\n      _ref$isInteractive = _ref.isInteractive,\n      isInteractive = _ref$isInteractive === void 0 ? defaultProps.isInteractive : _ref$isInteractive,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      onMouseMove = _ref.onMouseMove,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? defaultProps.tooltip : _ref$tooltip,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? defaultProps.role : _ref$role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      innerHeight = _useDimensions.innerHeight,\n      innerWidth = _useDimensions.innerWidth,\n      margin = _useDimensions.margin,\n      outerHeight = _useDimensions.outerHeight,\n      outerWidth = _useDimensions.outerWidth;\n\n  var _useMemo = useMemo(function () {\n    var radius = Math.min(innerWidth, innerHeight) / 2;\n    return {\n      radius: radius,\n      centerX: innerWidth / 2,\n      centerY: innerHeight / 2\n    };\n  }, [innerHeight, innerWidth]),\n      centerX = _useMemo.centerX,\n      centerY = _useMemo.centerY,\n      radius = _useMemo.radius;\n\n  var _useSunburst = useSunburst({\n    data: data,\n    id: id,\n    value: value,\n    valueFormat: valueFormat,\n    radius: radius,\n    cornerRadius: cornerRadius,\n    colors: colors,\n    colorBy: colorBy,\n    inheritColorFromParent: inheritColorFromParent,\n    childColor: childColor\n  }),\n      arcGenerator = _useSunburst.arcGenerator,\n      nodes = _useSunburst.nodes;\n\n  var boundDefs = bindDefs(defs, nodes, fill, {\n    dataKey: '.',\n    colorKey: 'color',\n    targetKey: 'fill'\n  });\n  var layerById = {\n    arcs: null,\n    arcLabels: null\n  };\n\n  if (layers.includes('arcs')) {\n    layerById.arcs = React.createElement(Arcs, {\n      key: \"arcs\",\n      center: [centerX, centerY],\n      data: nodes,\n      arcGenerator: arcGenerator,\n      borderWidth: borderWidth,\n      borderColor: borderColor,\n      transitionMode: transitionMode,\n      isInteractive: isInteractive,\n      tooltip: tooltip,\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onMouseMove: onMouseMove\n    });\n  }\n\n  if (enableArcLabels && layers.includes('arcLabels')) {\n    layerById.arcLabels = React.createElement(ArcLabelsLayer, {\n      key: \"arcLabels\",\n      center: [centerX, centerY],\n      data: nodes,\n      label: arcLabel,\n      radiusOffset: arcLabelsRadiusOffset,\n      skipAngle: arcLabelsSkipAngle,\n      textColor: arcLabelsTextColor,\n      transitionMode: transitionMode,\n      component: arcLabelsComponent\n    });\n  }\n\n  var layerContext = useSunburstLayerContext({\n    nodes: nodes,\n    arcGenerator: arcGenerator,\n    centerX: centerX,\n    centerY: centerY,\n    radius: radius\n  });\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    defs: boundDefs,\n    margin: margin,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (layerById[layer] !== undefined) {\n      return layerById[layer];\n    }\n\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, createElement(layer, layerContext));\n    }\n\n    return null;\n  }));\n};\n\nvar Sunburst = function Sunburst(_ref2) {\n  var _ref2$isInteractive = _ref2.isInteractive,\n      isInteractive = _ref2$isInteractive === void 0 ? defaultProps.isInteractive : _ref2$isInteractive,\n      _ref2$animate = _ref2.animate,\n      animate = _ref2$animate === void 0 ? defaultProps.animate : _ref2$animate,\n      _ref2$motionConfig = _ref2.motionConfig,\n      motionConfig = _ref2$motionConfig === void 0 ? defaultProps.motionConfig : _ref2$motionConfig,\n      theme = _ref2.theme,\n      otherProps = _objectWithoutProperties(_ref2, [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\"]);\n\n  return React.createElement(Container, {\n    isInteractive: isInteractive,\n    animate: animate,\n    motionConfig: motionConfig,\n    theme: theme\n  }, React.createElement(InnerSunburst, Object.assign({\n    isInteractive: isInteractive\n  }, otherProps)));\n};\n\nvar ResponsiveSunburst = function ResponsiveSunburst(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Sunburst, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { ResponsiveSunburst, Sunburst, defaultProps, useSunburst, useSunburstLayerContext };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/SunburstTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/hooks.ts","../src/Arcs.tsx","../src/Sunburst.tsx","../src/ResponsiveSunburst.tsx"],"names":["objectWithoutPropertiesLoose","SunburstTooltip","id","formattedValue","color","defaultProps","value","cornerRadius","layers","colors","scheme","colorBy","inheritColorFromParent","childColor","from","borderWidth","borderColor","enableArcLabels","arcLabel","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","theme","animate","motionConfig","transitionMode","isInteractive","defs","fill","tooltip","role","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","useSunburst","data","valueFormat","radius","useTheme","getColor","useOrdinalColorScale","getChildColor","useInheritedColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","nodes","useMemo","clonedData","cloneDeep","hierarchy","d3Hierarchy","partition","d3Partition","Math","descendants","total","sortedNodes","sortBy","descendant","percentage","path","ancestor","arc","startAngle","endAngle","innerRadius","outerRadius","parent","node","normalizedNode","depth","height","arcGenerator","useArcGenerator","useSunburstLayerContext","centerX","centerY","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","showTooltipFromEvent","hideTooltip","useTooltip","handleClick","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","InnerSunburst","margin","partialMargin","width","arcLabelsComponent","innerHeight","innerWidth","outerHeight","outerWidth","useDimensions","boundDefs","bindDefs","dataKey","colorKey","targetKey","layerById","arcs","arcLabels","layerContext","i","Sunburst","otherProps","ResponsiveSunburst"],"mappings":"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","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const SunburstTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { ArcTransitionMode } from '@nivo/arcs'\nimport { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { SunburstTooltip } from './SunburstTooltip'\nimport { SunburstLayerId } from './types'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    cornerRadius: 0,\n    layers: ['arcs', 'arcLabels'] as SunburstLayerId[],\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    colorBy: 'id' as const,\n    inheritColorFromParent: true,\n    childColor: { from: 'color' },\n    borderWidth: 1,\n    borderColor: 'white',\n    enableArcLabels: false,\n    arcLabel: 'formattedValue',\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsSkipAngle: 0,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n    isInteractive: true,\n    defs: [],\n    fill: [],\n    tooltip: SunburstTooltip,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { useMemo } from 'react'\nimport { partition as d3Partition, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport sortBy from 'lodash/sortBy'\nimport { usePropertyAccessor, useTheme, useValueFormatter } from '@nivo/core'\nimport { Arc, useArcGenerator } from '@nivo/arcs'\nimport { useOrdinalColorScale, useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport {\n    SunburstCommonProps,\n    ComputedDatum,\n    DataProps,\n    DatumId,\n    SunburstCustomLayerProps,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useSunburst = <RawDatum>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    radius,\n    cornerRadius = defaultProps.cornerRadius,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n}: {\n    data: DataProps<RawDatum>['data']\n    id?: DataProps<RawDatum>['id']\n    value?: DataProps<RawDatum>['value']\n    valueFormat?: DataProps<RawDatum>['valueFormat']\n    radius: number\n    cornerRadius?: SunburstCommonProps<RawDatum>['cornerRadius']\n    colors?: SunburstCommonProps<RawDatum>['colors']\n    colorBy?: SunburstCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent?: SunburstCommonProps<RawDatum>['inheritColorFromParent']\n    childColor?: SunburstCommonProps<RawDatum>['childColor']\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const nodes: ComputedDatum<RawDatum>[] = useMemo(() => {\n        // d3 mutates the data for performance reasons,\n        // however it does not work well with reactive programming,\n        // this ensures that we don't mutate the input data\n        const clonedData = cloneDeep(data)\n\n        const hierarchy = d3Hierarchy(clonedData).sum(getValue)\n\n        const partition = d3Partition<RawDatum>().size([2 * Math.PI, radius * radius])\n        // exclude root node\n        const descendants = partition(hierarchy).descendants().slice(1)\n\n        const total = hierarchy.value ?? 0\n\n        // It's important to sort node by depth,\n        // it ensures that we assign a parent node\n        // which has already been computed, because parent nodes\n        // are going to be computed first\n        const sortedNodes = sortBy(descendants, 'depth')\n\n        return sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n            const id = getId(descendant.data)\n            // d3 hierarchy node value is optional by default as it depends on\n            // a call to `count()` or `sum()`, and we previously called `sum()`,\n            // d3 typings could be improved and make it non optional when calling\n            // one of those.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const value = descendant.value!\n            const percentage = (100 * value) / total\n            const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n            const arc: Arc = {\n                startAngle: descendant.x0,\n                endAngle: descendant.x1,\n                innerRadius: Math.sqrt(descendant.y0),\n                outerRadius: Math.sqrt(descendant.y1),\n            }\n\n            let parent: ComputedDatum<RawDatum> | undefined\n            if (descendant.parent) {\n                // as the parent is defined by the input data, and we sorted the data\n                // by `depth`, we can safely assume it's defined.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                parent = acc.find(node => node.id === getId(descendant.parent!.data))\n            }\n\n            const normalizedNode: ComputedDatum<RawDatum> = {\n                id,\n                path,\n                value,\n                percentage,\n                formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n                color: '',\n                arc,\n                data: descendant.data,\n                depth: descendant.depth,\n                height: descendant.height,\n            }\n\n            if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n                normalizedNode.color = getChildColor(parent)\n            } else {\n                normalizedNode.color = getColor(normalizedNode)\n            }\n\n            return [...acc, normalizedNode]\n        }, [])\n    }, [\n        data,\n        radius,\n        getValue,\n        getId,\n        valueFormat,\n        formatValue,\n        getColor,\n        inheritColorFromParent,\n        getChildColor,\n    ])\n\n    const arcGenerator = useArcGenerator({ cornerRadius })\n\n    return { arcGenerator, nodes }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useSunburstLayerContext = <RawDatum>({\n    nodes,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n}: SunburstCustomLayerProps<RawDatum>): SunburstCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n        }),\n        [nodes, arcGenerator, centerX, centerY, radius]\n    )\n","import React, { createElement, useMemo } from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { ComputedDatum, SunburstCommonProps, MouseHandlers } from './types'\nimport { useTooltip } from '@nivo/tooltip'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: SunburstCommonProps<RawDatum>['borderWidth']\n    borderColor: SunburstCommonProps<RawDatum>['borderColor']\n    isInteractive: SunburstCommonProps<RawDatum>['isInteractive']\n    onClick?: MouseHandlers<RawDatum>['onClick']\n    onMouseEnter?: MouseHandlers<RawDatum>['onMouseEnter']\n    onMouseMove?: MouseHandlers<RawDatum>['onMouseMove']\n    onMouseLeave?: MouseHandlers<RawDatum>['onMouseLeave']\n    tooltip: SunburstCommonProps<RawDatum>['tooltip']\n    transitionMode: SunburstCommonProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import React, { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { ArcLabelsLayer } from '@nivo/arcs'\nimport { defaultProps } from './props'\nimport { useSunburst, useSunburstLayerContext } from './hooks'\nimport { SunburstSvgProps, SunburstLayerId, SunburstLayer, ComputedDatum } from './types'\nimport { Arcs } from './Arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\n\ntype InnerSunburstProps<RawDatum> = Partial<\n    Omit<\n        SunburstSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerSunburst = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    cornerRadius = defaultProps.cornerRadius,\n    layers = defaultProps.layers as SunburstLayer<RawDatum>[],\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor,\n    margin: partialMargin,\n    width,\n    height,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    transitionMode = defaultProps.transitionMode,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    role = defaultProps.role,\n}: InnerSunburstProps<RawDatum>) => {\n    const { innerHeight, innerWidth, margin, outerHeight, outerWidth } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { centerX, centerY, radius } = useMemo(() => {\n        const radius = Math.min(innerWidth, innerHeight) / 2\n\n        return { radius, centerX: innerWidth / 2, centerY: innerHeight / 2 }\n    }, [innerHeight, innerWidth])\n\n    const { arcGenerator, nodes } = useSunburst({\n        data,\n        id,\n        value,\n        valueFormat,\n        radius,\n        cornerRadius,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill, {\n        dataKey: '.',\n        colorKey: 'color',\n        targetKey: 'fill',\n    })\n\n    const layerById: Record<SunburstLayerId, ReactNode> = {\n        arcs: null,\n        arcLabels: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={nodes}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                transitionMode={transitionMode}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={onMouseMove}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={nodes}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    const layerContext = useSunburstLayerContext<RawDatum>({\n        nodes,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            defs={boundDefs}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as SunburstLayerId] !== undefined) {\n                    return layerById[layer as SunburstLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sunburst = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    ...otherProps\n}: Partial<Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme }}>\n        <InnerSunburst<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Sunburst } from './Sunburst'\nimport { SunburstSvgProps } from './types'\n\ntype ResponsiveSunburstProps<RawDatum> = Partial<\n    Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveSunburst = <RawDatum,>(props: ResponsiveSunburstProps<RawDatum>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Sunburst<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"]},"metadata":{},"sourceType":"module"}