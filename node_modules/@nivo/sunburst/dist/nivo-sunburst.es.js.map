{"version":3,"file":"nivo-sunburst.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/SunburstTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/hooks.ts","../src/Arcs.tsx","../src/Sunburst.tsx","../src/ResponsiveSunburst.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const SunburstTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { ArcTransitionMode } from '@nivo/arcs'\nimport { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { SunburstTooltip } from './SunburstTooltip'\nimport { SunburstLayerId } from './types'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    cornerRadius: 0,\n    layers: ['arcs', 'arcLabels'] as SunburstLayerId[],\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    colorBy: 'id' as const,\n    inheritColorFromParent: true,\n    childColor: { from: 'color' },\n    borderWidth: 1,\n    borderColor: 'white',\n    enableArcLabels: false,\n    arcLabel: 'formattedValue',\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsSkipAngle: 0,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n    isInteractive: true,\n    defs: [],\n    fill: [],\n    tooltip: SunburstTooltip,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { useMemo } from 'react'\nimport { partition as d3Partition, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport sortBy from 'lodash/sortBy'\nimport { usePropertyAccessor, useTheme, useValueFormatter } from '@nivo/core'\nimport { Arc, useArcGenerator } from '@nivo/arcs'\nimport { useOrdinalColorScale, useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport {\n    SunburstCommonProps,\n    ComputedDatum,\n    DataProps,\n    DatumId,\n    SunburstCustomLayerProps,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useSunburst = <RawDatum>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    radius,\n    cornerRadius = defaultProps.cornerRadius,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n}: {\n    data: DataProps<RawDatum>['data']\n    id?: DataProps<RawDatum>['id']\n    value?: DataProps<RawDatum>['value']\n    valueFormat?: DataProps<RawDatum>['valueFormat']\n    radius: number\n    cornerRadius?: SunburstCommonProps<RawDatum>['cornerRadius']\n    colors?: SunburstCommonProps<RawDatum>['colors']\n    colorBy?: SunburstCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent?: SunburstCommonProps<RawDatum>['inheritColorFromParent']\n    childColor?: SunburstCommonProps<RawDatum>['childColor']\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const nodes: ComputedDatum<RawDatum>[] = useMemo(() => {\n        // d3 mutates the data for performance reasons,\n        // however it does not work well with reactive programming,\n        // this ensures that we don't mutate the input data\n        const clonedData = cloneDeep(data)\n\n        const hierarchy = d3Hierarchy(clonedData).sum(getValue)\n\n        const partition = d3Partition<RawDatum>().size([2 * Math.PI, radius * radius])\n        // exclude root node\n        const descendants = partition(hierarchy).descendants().slice(1)\n\n        const total = hierarchy.value ?? 0\n\n        // It's important to sort node by depth,\n        // it ensures that we assign a parent node\n        // which has already been computed, because parent nodes\n        // are going to be computed first\n        const sortedNodes = sortBy(descendants, 'depth')\n\n        return sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n            const id = getId(descendant.data)\n            // d3 hierarchy node value is optional by default as it depends on\n            // a call to `count()` or `sum()`, and we previously called `sum()`,\n            // d3 typings could be improved and make it non optional when calling\n            // one of those.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const value = descendant.value!\n            const percentage = (100 * value) / total\n            const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n            const arc: Arc = {\n                startAngle: descendant.x0,\n                endAngle: descendant.x1,\n                innerRadius: Math.sqrt(descendant.y0),\n                outerRadius: Math.sqrt(descendant.y1),\n            }\n\n            let parent: ComputedDatum<RawDatum> | undefined\n            if (descendant.parent) {\n                // as the parent is defined by the input data, and we sorted the data\n                // by `depth`, we can safely assume it's defined.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                parent = acc.find(node => node.id === getId(descendant.parent!.data))\n            }\n\n            const normalizedNode: ComputedDatum<RawDatum> = {\n                id,\n                path,\n                value,\n                percentage,\n                formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n                color: '',\n                arc,\n                data: descendant.data,\n                depth: descendant.depth,\n                height: descendant.height,\n            }\n\n            if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n                normalizedNode.color = getChildColor(parent)\n            } else {\n                normalizedNode.color = getColor(normalizedNode)\n            }\n\n            return [...acc, normalizedNode]\n        }, [])\n    }, [\n        data,\n        radius,\n        getValue,\n        getId,\n        valueFormat,\n        formatValue,\n        getColor,\n        inheritColorFromParent,\n        getChildColor,\n    ])\n\n    const arcGenerator = useArcGenerator({ cornerRadius })\n\n    return { arcGenerator, nodes }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useSunburstLayerContext = <RawDatum>({\n    nodes,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n}: SunburstCustomLayerProps<RawDatum>): SunburstCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n        }),\n        [nodes, arcGenerator, centerX, centerY, radius]\n    )\n","import React, { createElement, useMemo } from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { ComputedDatum, SunburstCommonProps, MouseHandlers } from './types'\nimport { useTooltip } from '@nivo/tooltip'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: SunburstCommonProps<RawDatum>['borderWidth']\n    borderColor: SunburstCommonProps<RawDatum>['borderColor']\n    isInteractive: SunburstCommonProps<RawDatum>['isInteractive']\n    onClick?: MouseHandlers<RawDatum>['onClick']\n    onMouseEnter?: MouseHandlers<RawDatum>['onMouseEnter']\n    onMouseMove?: MouseHandlers<RawDatum>['onMouseMove']\n    onMouseLeave?: MouseHandlers<RawDatum>['onMouseLeave']\n    tooltip: SunburstCommonProps<RawDatum>['tooltip']\n    transitionMode: SunburstCommonProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import React, { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { ArcLabelsLayer } from '@nivo/arcs'\nimport { defaultProps } from './props'\nimport { useSunburst, useSunburstLayerContext } from './hooks'\nimport { SunburstSvgProps, SunburstLayerId, SunburstLayer, ComputedDatum } from './types'\nimport { Arcs } from './Arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\n\ntype InnerSunburstProps<RawDatum> = Partial<\n    Omit<\n        SunburstSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerSunburst = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    cornerRadius = defaultProps.cornerRadius,\n    layers = defaultProps.layers as SunburstLayer<RawDatum>[],\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor,\n    margin: partialMargin,\n    width,\n    height,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    transitionMode = defaultProps.transitionMode,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    role = defaultProps.role,\n}: InnerSunburstProps<RawDatum>) => {\n    const { innerHeight, innerWidth, margin, outerHeight, outerWidth } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { centerX, centerY, radius } = useMemo(() => {\n        const radius = Math.min(innerWidth, innerHeight) / 2\n\n        return { radius, centerX: innerWidth / 2, centerY: innerHeight / 2 }\n    }, [innerHeight, innerWidth])\n\n    const { arcGenerator, nodes } = useSunburst({\n        data,\n        id,\n        value,\n        valueFormat,\n        radius,\n        cornerRadius,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill, {\n        dataKey: '.',\n        colorKey: 'color',\n        targetKey: 'fill',\n    })\n\n    const layerById: Record<SunburstLayerId, ReactNode> = {\n        arcs: null,\n        arcLabels: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={nodes}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                transitionMode={transitionMode}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={onMouseMove}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={nodes}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    const layerContext = useSunburstLayerContext<RawDatum>({\n        nodes,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            defs={boundDefs}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as SunburstLayerId] !== undefined) {\n                    return layerById[layer as SunburstLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sunburst = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    ...otherProps\n}: Partial<Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme }}>\n        <InnerSunburst<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Sunburst } from './Sunburst'\nimport { SunburstSvgProps } from './types'\n\ntype ResponsiveSunburstProps<RawDatum> = Partial<\n    Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveSunburst = <RawDatum,>(props: ResponsiveSunburstProps<RawDatum>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Sunburst<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","SunburstTooltip","id","formattedValue","color","defaultProps","value","cornerRadius","layers","colors","scheme","colorBy","inheritColorFromParent","childColor","from","borderWidth","borderColor","enableArcLabels","arcLabel","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","theme","animate","motionConfig","transitionMode","isInteractive","defs","fill","tooltip","role","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","useSunburst","data","valueFormat","radius","useTheme","getColor","useOrdinalColorScale","getChildColor","useInheritedColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","nodes","useMemo","clonedData","cloneDeep","hierarchy","d3Hierarchy","sum","partition","d3Partition","size","Math","PI","descendants","slice","total","sortedNodes","sortBy","reduce","acc","descendant","percentage","path","ancestors","map","ancestor","arc","startAngle","x0","endAngle","x1","innerRadius","sqrt","y0","outerRadius","y1","parent","find","node","normalizedNode","toFixed","depth","height","arcGenerator","useArcGenerator","useSunburstLayerContext","centerX","centerY","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","undefined","datum","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","InnerSunburst","partialMargin","margin","width","arcLabelsComponent","useDimensions","innerHeight","innerWidth","outerHeight","outerWidth","min","boundDefs","bindDefs","dataKey","colorKey","targetKey","layerById","arcs","arcLabels","includes","layerContext","layer","i","Sunburst","otherProps","ResponsiveSunburst","props"],"mappings":";;;;;;;;;AAAe,SAAS,6BAA6B,CAAC,MAAM,EAAE,QAAQ,EAAE;AACxE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACxB,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9B,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;ACZe,SAAS,wBAAwB,CAAC,MAAM,EAAE,QAAQ,EAAE;AACnE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAGA,6BAA4B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC9D,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AAEhE,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC/C,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS;AAC7E,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAChC,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;ACdO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAC3BC,EAD2B,QAC3BA,EAD2B;AAAA,MAE3BC,cAF2B,QAE3BA,cAF2B;AAAA,MAG3BC,KAH2B,QAG3BA,KAH2B;AAAA,SAK3B,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEF,EAAlB;AAAsB,IAAA,KAAK,EAAEC,cAA7B;AAA6C,IAAA,UAAU,EAAE,IAAzD;AAA+D,IAAA,KAAK,EAAEC;AAAtE,IAL2B;AAAA,CAAxB;;ICCMC,YAAY,GAAG;AACxBH,EAAAA,EAAE,EAAE,IADoB;AAExBI,EAAAA,KAAK,EAAE,OAFiB;AAGxBC,EAAAA,YAAY,EAAE,CAHU;AAIxBC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,WAAT,CAJgB;AAKxBC,EAAAA,MAAM,EAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GALe;AAMxBC,EAAAA,OAAO,EAAE,IANe;AAOxBC,EAAAA,sBAAsB,EAAE,IAPA;AAQxBC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GARY;AASxBC,EAAAA,WAAW,EAAE,CATW;AAUxBC,EAAAA,WAAW,EAAE,OAVW;AAWxBC,EAAAA,eAAe,EAAE,KAXO;AAYxBC,EAAAA,QAAQ,EAAE,gBAZc;AAaxBC,EAAAA,qBAAqB,EAAE,GAbC;AAcxBC,EAAAA,kBAAkB,EAAE,CAdI;AAexBC,EAAAA,kBAAkB,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAfI;AAgBxBC,EAAAA,OAAO,EAAE,IAhBe;AAiBxBC,EAAAA,YAAY,EAAE,QAjBU;AAkBxBC,EAAAA,cAAc,EAAE,aAlBQ;AAmBxBC,EAAAA,aAAa,EAAE,IAnBS;AAoBxBC,EAAAA,IAAI,EAAE,EApBkB;AAqBxBC,EAAAA,IAAI,EAAE,EArBkB;AAsBxBC,EAAAA,OAAO,EAAE5B,eAtBe;AAuBxB6B,EAAAA,IAAI,EAAE;AAvBkB;;ACLb,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;AACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACPe,SAAS,kBAAkB,CAAC,GAAG,EAAE;AAChD,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAOC,iBAAgB,CAAC,GAAG,CAAC,CAAC;AACvD;;ACHe,SAAS,gBAAgB,CAAC,IAAI,EAAE;AAC/C,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChG;;ACDe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;AAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;AACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;AAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAClH;;ACRe,SAAS,kBAAkB,GAAG;AAC7C,EAAE,MAAM,IAAI,SAAS,CAAC,sIAAsI,CAAC,CAAC;AAC9J;;ACEe,SAAS,kBAAkB,CAAC,GAAG,EAAE;AAChD,EAAE,OAAOC,kBAAiB,CAAC,GAAG,CAAC,IAAIC,gBAAe,CAAC,GAAG,CAAC,IAAIC,2BAA0B,CAAC,GAAG,CAAC,IAAIC,kBAAiB,EAAE,CAAC;AAClH;;ICUaC,WAAW,GAAG,SAAdA,WAAc,OAsBrB;AAAA,MArBFC,IAqBE,QArBFA,IAqBE;AAAA,qBApBFnC,EAoBE;AAAA,MApBFA,EAoBE,wBApBGG,YAAY,CAACH,EAoBhB;AAAA,wBAnBFI,KAmBE;AAAA,MAnBFA,KAmBE,2BAnBMD,YAAY,CAACC,KAmBnB;AAAA,MAlBFgC,WAkBE,QAlBFA,WAkBE;AAAA,MAjBFC,MAiBE,QAjBFA,MAiBE;AAAA,+BAhBFhC,YAgBE;AAAA,MAhBFA,YAgBE,kCAhBaF,YAAY,CAACE,YAgB1B;AAAA,yBAfFE,MAeE;AAAA,MAfFA,MAeE,4BAfOJ,YAAY,CAACI,MAepB;AAAA,0BAdFE,OAcE;AAAA,MAdFA,OAcE,6BAdQN,YAAY,CAACM,OAcrB;AAAA,mCAbFC,sBAaE;AAAA,MAbFA,sBAaE,sCAbuBP,YAAY,CAACO,sBAapC;AAAA,6BAZFC,UAYE;AAAA,MAZFA,UAYE,gCAZWR,YAAY,CAACQ,UAYxB;AACF,MAAMS,KAAK,GAAGkB,QAAQ,EAAtB;AACA,MAAMC,QAAQ,GAAGC,oBAAoB,CACjCjC,MADiC,EAEjCE,OAFiC,CAArC;AAIA,MAAMgC,aAAa,GAAGC,iBAAiB,CAA0B/B,UAA1B,EAAsCS,KAAtC,CAAvC;AAEA,MAAMuB,KAAK,GAAGC,mBAAmB,CAAoB5C,EAApB,CAAjC;AACA,MAAM6C,QAAQ,GAAGD,mBAAmB,CAAmBxC,KAAnB,CAApC;AACA,MAAM0C,WAAW,GAAGC,iBAAiB,CAASX,WAAT,CAArC;AAEA,MAAMY,KAAgC,GAAGC,OAAO,CAAC,YAAM;AAAA;;AAInD,QAAMC,UAAU,GAAGC,SAAS,CAAChB,IAAD,CAA5B;AAEA,QAAMiB,WAAS,GAAGC,SAAW,CAACH,UAAD,CAAX,CAAwBI,GAAxB,CAA4BT,QAA5B,CAAlB;AAEA,QAAMU,WAAS,GAAGC,SAAW,GAAaC,IAAxB,CAA6B,CAAC,IAAIC,IAAI,CAACC,EAAV,EAActB,MAAM,GAAGA,MAAvB,CAA7B,CAAlB;AAEA,QAAMuB,WAAW,GAAGL,WAAS,CAACH,WAAD,CAAT,CAAqBQ,WAArB,GAAmCC,KAAnC,CAAyC,CAAzC,CAApB;AAEA,QAAMC,KAAK,uBAAGV,WAAS,CAAChD,KAAb,+DAAsB,CAAjC;AAMA,QAAM2D,WAAW,GAAGC,MAAM,CAACJ,WAAD,EAAc,OAAd,CAA1B;AAEA,WAAOG,WAAW,CAACE,MAAZ,CAA8C,UAACC,GAAD,EAAMC,UAAN,EAAqB;AACtE,UAAMnE,EAAE,GAAG2C,KAAK,CAACwB,UAAU,CAAChC,IAAZ,CAAhB;AAMA,UAAM/B,KAAK,GAAG+D,UAAU,CAAC/D,KAAzB;AACA,UAAMgE,UAAU,GAAI,MAAMhE,KAAP,GAAgB0D,KAAnC;AACA,UAAMO,IAAI,GAAGF,UAAU,CAACG,SAAX,GAAuBC,GAAvB,CAA2B,UAAAC,QAAQ;AAAA,eAAI7B,KAAK,CAAC6B,QAAQ,CAACrC,IAAV,CAAT;AAAA,OAAnC,CAAb;AAEA,UAAMsC,GAAQ,GAAG;AACbC,QAAAA,UAAU,EAAEP,UAAU,CAACQ,EADV;AAEbC,QAAAA,QAAQ,EAAET,UAAU,CAACU,EAFR;AAGbC,QAAAA,WAAW,EAAEpB,IAAI,CAACqB,IAAL,CAAUZ,UAAU,CAACa,EAArB,CAHA;AAIbC,QAAAA,WAAW,EAAEvB,IAAI,CAACqB,IAAL,CAAUZ,UAAU,CAACe,EAArB;AAJA,OAAjB;AAOA,UAAIC,MAAJ;;AACA,UAAIhB,UAAU,CAACgB,MAAf,EAAuB;AAInBA,QAAAA,MAAM,GAAGjB,GAAG,CAACkB,IAAJ,CAAS,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACrF,EAAL,KAAY2C,KAAK,CAACwB,UAAU,CAACgB,MAAX,CAAmBhD,IAApB,CAArB;AAAA,SAAb,CAAT;AACH;;AAED,UAAMmD,cAAuC,GAAG;AAC5CtF,QAAAA,EAAE,EAAFA,EAD4C;AAE5CqE,QAAAA,IAAI,EAAJA,IAF4C;AAG5CjE,QAAAA,KAAK,EAALA,KAH4C;AAI5CgE,QAAAA,UAAU,EAAVA,UAJ4C;AAK5CnE,QAAAA,cAAc,EAAEmC,WAAW,GAAGU,WAAW,CAAC1C,KAAD,CAAd,aAA2BgE,UAAU,CAACmB,OAAX,CAAmB,CAAnB,CAA3B,MALiB;AAM5CrF,QAAAA,KAAK,EAAE,EANqC;AAO5CuE,QAAAA,GAAG,EAAHA,GAP4C;AAQ5CtC,QAAAA,IAAI,EAAEgC,UAAU,CAAChC,IAR2B;AAS5CqD,QAAAA,KAAK,EAAErB,UAAU,CAACqB,KAT0B;AAU5CC,QAAAA,MAAM,EAAEtB,UAAU,CAACsB;AAVyB,OAAhD;;AAaA,UAAI/E,sBAAsB,IAAIyE,MAA1B,IAAoCG,cAAc,CAACE,KAAf,GAAuB,CAA/D,EAAkE;AAC9DF,QAAAA,cAAc,CAACpF,KAAf,GAAuBuC,aAAa,CAAC0C,MAAD,CAApC;AACH,OAFD,MAEO;AACHG,QAAAA,cAAc,CAACpF,KAAf,GAAuBqC,QAAQ,CAAC+C,cAAD,CAA/B;AACH;;AAED,0CAAWpB,GAAX,IAAgBoB,cAAhB;AACH,KA9CM,EA8CJ,EA9CI,CAAP;AA+CH,GAnE+C,EAmE7C,CACCnD,IADD,EAECE,MAFD,EAGCQ,QAHD,EAICF,KAJD,EAKCP,WALD,EAMCU,WAND,EAOCP,QAPD,EAQC7B,sBARD,EASC+B,aATD,CAnE6C,CAAhD;AA+EA,MAAMiD,YAAY,GAAGC,eAAe,CAAC;AAAEtF,IAAAA,YAAY,EAAZA;AAAF,GAAD,CAApC;AAEA,SAAO;AAAEqF,IAAAA,YAAY,EAAZA,YAAF;AAAgB1C,IAAAA,KAAK,EAALA;AAAhB,GAAP;AACH;IAKY4C,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,MACnC5C,KADmC,SACnCA,KADmC;AAAA,MAEnC0C,YAFmC,SAEnCA,YAFmC;AAAA,MAGnCG,OAHmC,SAGnCA,OAHmC;AAAA,MAInCC,OAJmC,SAInCA,OAJmC;AAAA,MAKnCzD,MALmC,SAKnCA,MALmC;AAAA,SAOnCY,OAAO,CACH;AAAA,WAAO;AACHD,MAAAA,KAAK,EAALA,KADG;AAEH0C,MAAAA,YAAY,EAAZA,YAFG;AAGHG,MAAAA,OAAO,EAAPA,OAHG;AAIHC,MAAAA,OAAO,EAAPA,OAJG;AAKHzD,MAAAA,MAAM,EAANA;AALG,KAAP;AAAA,GADG,EAQH,CAACW,KAAD,EAAQ0C,YAAR,EAAsBG,OAAtB,EAA+BC,OAA/B,EAAwCzD,MAAxC,CARG,CAP4B;AAAA;;ACrHhC,IAAM0D,IAAI,GAAG,SAAPA,IAAO,OAaO;AAAA,MAZvBC,MAYuB,QAZvBA,MAYuB;AAAA,MAXvB7D,IAWuB,QAXvBA,IAWuB;AAAA,MAVvBuD,YAUuB,QAVvBA,YAUuB;AAAA,MATvB7E,WASuB,QATvBA,WASuB;AAAA,MARvBC,WAQuB,QARvBA,WAQuB;AAAA,MAPvBU,aAOuB,QAPvBA,aAOuB;AAAA,MANvByE,OAMuB,QANvBA,OAMuB;AAAA,MALvBC,YAKuB,QALvBA,YAKuB;AAAA,MAJvBC,WAIuB,QAJvBA,WAIuB;AAAA,MAHvBC,YAGuB,QAHvBA,YAGuB;AAAA,MAFvBzE,OAEuB,QAFvBA,OAEuB;AAAA,MADvBJ,cACuB,QADvBA,cACuB;;AAAA,oBACuB8E,UAAU,EADjC;AAAA,MACfC,oBADe,eACfA,oBADe;AAAA,MACOC,WADP,eACOA,WADP;;AAGvB,MAAMC,WAAW,GAAGvD,OAAO,CAAC,YAAM;AAC9B,QAAI,CAACzB,aAAL,EAAoB,OAAOiF,SAAP;AAEpB,WAAO,UAACC,KAAD,EAAiCC,KAAjC,EAA6E;AAChFV,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGS,KAAH,EAAUC,KAAV,CAAP;AACH,KAFD;AAGH,GAN0B,EAMxB,CAACnF,aAAD,EAAgByE,OAAhB,CANwB,CAA3B;AAQA,MAAMW,gBAAgB,GAAG3D,OAAO,CAAC,YAAM;AACnC,QAAI,CAACzB,aAAL,EAAoB,OAAOiF,SAAP;AAEpB,WAAO,UAACC,KAAD,EAAiCC,KAAjC,EAA6E;AAChFL,MAAAA,oBAAoB,CAACO,aAAa,CAAClF,OAAD,EAAU+E,KAAV,CAAd,EAAgCC,KAAhC,CAApB;AACAT,MAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGQ,KAAH,EAAUC,KAAV,CAAZ;AACH,KAHD;AAIH,GAP+B,EAO7B,CAACnF,aAAD,EAAgB8E,oBAAhB,EAAsC3E,OAAtC,EAA+CuE,YAA/C,CAP6B,CAAhC;AASA,MAAMY,eAAe,GAAG7D,OAAO,CAAC,YAAM;AAClC,QAAI,CAACzB,aAAL,EAAoB,OAAOiF,SAAP;AAEpB,WAAO,UAACC,KAAD,EAAiCC,KAAjC,EAA6E;AAChFL,MAAAA,oBAAoB,CAACO,aAAa,CAAClF,OAAD,EAAU+E,KAAV,CAAd,EAAgCC,KAAhC,CAApB;AACAR,MAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAGO,KAAH,EAAUC,KAAV,CAAX;AACH,KAHD;AAIH,GAP8B,EAO5B,CAACnF,aAAD,EAAgB8E,oBAAhB,EAAsC3E,OAAtC,EAA+CwE,WAA/C,CAP4B,CAA/B;AASA,MAAMY,gBAAgB,GAAG9D,OAAO,CAAC,YAAM;AACnC,QAAI,CAACzB,aAAL,EAAoB,OAAOiF,SAAP;AAEpB,WAAO,UAACC,KAAD,EAAiCC,KAAjC,EAA6E;AAChFJ,MAAAA,WAAW;AACXH,MAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGM,KAAH,EAAUC,KAAV,CAAZ;AACH,KAHD;AAIH,GAP+B,EAO7B,CAACnF,aAAD,EAAgB+E,WAAhB,EAA6BH,YAA7B,CAP6B,CAAhC;AASA,SACI,oBAAC,SAAD;AACI,IAAA,MAAM,EAAEJ,MADZ;AAEI,IAAA,IAAI,EAAE7D,IAFV;AAGI,IAAA,YAAY,EAAEuD,YAHlB;AAII,IAAA,WAAW,EAAE7E,WAJjB;AAKI,IAAA,WAAW,EAAEC,WALjB;AAMI,IAAA,cAAc,EAAES,cANpB;AAOI,IAAA,OAAO,EAAEiF,WAPb;AAQI,IAAA,YAAY,EAAEI,gBARlB;AASI,IAAA,WAAW,EAAEE,eATjB;AAUI,IAAA,YAAY,EAAEC;AAVlB,IADJ;AAcH,CAjEM;;ACGP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAgCc;AAAA,MA/BhC7E,IA+BgC,QA/BhCA,IA+BgC;AAAA,qBA9BhCnC,EA8BgC;AAAA,MA9BhCA,EA8BgC,wBA9B3BG,YAAY,CAACH,EA8Bc;AAAA,wBA7BhCI,KA6BgC;AAAA,MA7BhCA,KA6BgC,2BA7BxBD,YAAY,CAACC,KA6BW;AAAA,MA5BhCgC,WA4BgC,QA5BhCA,WA4BgC;AAAA,+BA3BhC/B,YA2BgC;AAAA,MA3BhCA,YA2BgC,kCA3BjBF,YAAY,CAACE,YA2BI;AAAA,yBA1BhCC,MA0BgC;AAAA,MA1BhCA,MA0BgC,4BA1BvBH,YAAY,CAACG,MA0BU;AAAA,yBAzBhCC,MAyBgC;AAAA,MAzBhCA,MAyBgC,4BAzBvBJ,YAAY,CAACI,MAyBU;AAAA,0BAxBhCE,OAwBgC;AAAA,MAxBhCA,OAwBgC,6BAxBtBN,YAAY,CAACM,OAwBS;AAAA,mCAvBhCC,sBAuBgC;AAAA,MAvBhCA,sBAuBgC,sCAvBPP,YAAY,CAACO,sBAuBN;AAAA,6BAtBhCC,UAsBgC;AAAA,MAtBhCA,UAsBgC,gCAtBnBR,YAAY,CAACQ,UAsBM;AAAA,8BArBhCE,WAqBgC;AAAA,MArBhCA,WAqBgC,iCArBlBV,YAAY,CAACU,WAqBK;AAAA,8BApBhCC,WAoBgC;AAAA,MApBhCA,WAoBgC,iCApBlBX,YAAY,CAACW,WAoBK;AAAA,MAnBxBmG,aAmBwB,QAnBhCC,MAmBgC;AAAA,MAlBhCC,KAkBgC,QAlBhCA,KAkBgC;AAAA,MAjBhC1B,MAiBgC,QAjBhCA,MAiBgC;AAAA,kCAhBhC1E,eAgBgC;AAAA,MAhBhCA,eAgBgC,qCAhBdZ,YAAY,CAACY,eAgBC;AAAA,2BAfhCC,QAegC;AAAA,MAfhCA,QAegC,8BAfrBb,YAAY,CAACa,QAeQ;AAAA,mCAdhCC,qBAcgC;AAAA,MAdhCA,qBAcgC,sCAdRd,YAAY,CAACc,qBAcL;AAAA,mCAbhCC,kBAagC;AAAA,MAbhCA,kBAagC,sCAbXf,YAAY,CAACe,kBAaF;AAAA,mCAZhCC,kBAYgC;AAAA,MAZhCA,kBAYgC,sCAZXhB,YAAY,CAACgB,kBAYF;AAAA,MAXhCiG,kBAWgC,QAXhCA,kBAWgC;AAAA,uBAVhC3F,IAUgC;AAAA,MAVhCA,IAUgC,0BAVzBtB,YAAY,CAACsB,IAUY;AAAA,uBAThCC,IASgC;AAAA,MAThCA,IASgC,0BATzBvB,YAAY,CAACuB,IASY;AAAA,iCARhCH,cAQgC;AAAA,MARhCA,cAQgC,oCARfpB,YAAY,CAACoB,cAQE;AAAA,gCAPhCC,aAOgC;AAAA,MAPhCA,aAOgC,mCAPhBrB,YAAY,CAACqB,aAOG;AAAA,MANhCyE,OAMgC,QANhCA,OAMgC;AAAA,MALhCC,YAKgC,QALhCA,YAKgC;AAAA,MAJhCE,YAIgC,QAJhCA,YAIgC;AAAA,MAHhCD,WAGgC,QAHhCA,WAGgC;AAAA,0BAFhCxE,OAEgC;AAAA,MAFhCA,OAEgC,6BAFtBxB,YAAY,CAACwB,OAES;AAAA,uBADhCC,IACgC;AAAA,MADhCA,IACgC,0BADzBzB,YAAY,CAACyB,IACY;;AAAA,uBACqCyF,aAAa,CAC9EF,KAD8E,EAE9E1B,MAF8E,EAG9EwB,aAH8E,CADlD;AAAA,MACxBK,WADwB,kBACxBA,WADwB;AAAA,MACXC,UADW,kBACXA,UADW;AAAA,MACCL,MADD,kBACCA,MADD;AAAA,MACSM,WADT,kBACSA,WADT;AAAA,MACsBC,UADtB,kBACsBA,UADtB;;AAAA,iBAOKxE,OAAO,CAAC,YAAM;AAC/C,QAAMZ,MAAM,GAAGqB,IAAI,CAACgE,GAAL,CAASH,UAAT,EAAqBD,WAArB,IAAoC,CAAnD;AAEA,WAAO;AAAEjF,MAAAA,MAAM,EAANA,MAAF;AAAUwD,MAAAA,OAAO,EAAE0B,UAAU,GAAG,CAAhC;AAAmCzB,MAAAA,OAAO,EAAEwB,WAAW,GAAG;AAA1D,KAAP;AACH,GAJ2C,EAIzC,CAACA,WAAD,EAAcC,UAAd,CAJyC,CAPZ;AAAA,MAOxB1B,OAPwB,YAOxBA,OAPwB;AAAA,MAOfC,OAPe,YAOfA,OAPe;AAAA,MAONzD,MAPM,YAONA,MAPM;;AAAA,qBAaAH,WAAW,CAAC;AACxCC,IAAAA,IAAI,EAAJA,IADwC;AAExCnC,IAAAA,EAAE,EAAFA,EAFwC;AAGxCI,IAAAA,KAAK,EAALA,KAHwC;AAIxCgC,IAAAA,WAAW,EAAXA,WAJwC;AAKxCC,IAAAA,MAAM,EAANA,MALwC;AAMxChC,IAAAA,YAAY,EAAZA,YANwC;AAOxCE,IAAAA,MAAM,EAANA,MAPwC;AAQxCE,IAAAA,OAAO,EAAPA,OARwC;AASxCC,IAAAA,sBAAsB,EAAtBA,sBATwC;AAUxCC,IAAAA,UAAU,EAAVA;AAVwC,GAAD,CAbX;AAAA,MAaxB+E,YAbwB,gBAaxBA,YAbwB;AAAA,MAaV1C,KAbU,gBAaVA,KAbU;;AA0BhC,MAAM2E,SAAS,GAAGC,QAAQ,CAACnG,IAAD,EAAOuB,KAAP,EAActB,IAAd,EAAoB;AAC1CmG,IAAAA,OAAO,EAAE,GADiC;AAE1CC,IAAAA,QAAQ,EAAE,OAFgC;AAG1CC,IAAAA,SAAS,EAAE;AAH+B,GAApB,CAA1B;AAMA,MAAMC,SAA6C,GAAG;AAClDC,IAAAA,IAAI,EAAE,IAD4C;AAElDC,IAAAA,SAAS,EAAE;AAFuC,GAAtD;;AAKA,MAAI5H,MAAM,CAAC6H,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBH,IAAAA,SAAS,CAACC,IAAV,GACI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAC,MADR;AAEI,MAAA,MAAM,EAAE,CAACpC,OAAD,EAAUC,OAAV,CAFZ;AAGI,MAAA,IAAI,EAAE9C,KAHV;AAII,MAAA,YAAY,EAAE0C,YAJlB;AAKI,MAAA,WAAW,EAAE7E,WALjB;AAMI,MAAA,WAAW,EAAEC,WANjB;AAOI,MAAA,cAAc,EAAES,cAPpB;AAQI,MAAA,aAAa,EAAEC,aARnB;AASI,MAAA,OAAO,EAAEG,OATb;AAUI,MAAA,OAAO,EAAEsE,OAVb;AAWI,MAAA,YAAY,EAAEC,YAXlB;AAYI,MAAA,YAAY,EAAEE,YAZlB;AAaI,MAAA,WAAW,EAAED;AAbjB,MADJ;AAiBH;;AAED,MAAIpF,eAAe,IAAIT,MAAM,CAAC6H,QAAP,CAAgB,WAAhB,CAAvB,EAAqD;AACjDH,IAAAA,SAAS,CAACE,SAAV,GACI,oBAAC,cAAD;AACI,MAAA,GAAG,EAAC,WADR;AAEI,MAAA,MAAM,EAAE,CAACrC,OAAD,EAAUC,OAAV,CAFZ;AAGI,MAAA,IAAI,EAAE9C,KAHV;AAII,MAAA,KAAK,EAAEhC,QAJX;AAKI,MAAA,YAAY,EAAEC,qBALlB;AAMI,MAAA,SAAS,EAAEC,kBANf;AAOI,MAAA,SAAS,EAAEC,kBAPf;AAQI,MAAA,cAAc,EAAEI,cARpB;AASI,MAAA,SAAS,EAAE6F;AATf,MADJ;AAaH;;AAED,MAAMgB,YAAY,GAAGxC,uBAAuB,CAAW;AACnD5C,IAAAA,KAAK,EAALA,KADmD;AAEnD0C,IAAAA,YAAY,EAAZA,YAFmD;AAGnDG,IAAAA,OAAO,EAAPA,OAHmD;AAInDC,IAAAA,OAAO,EAAPA,OAJmD;AAKnDzD,IAAAA,MAAM,EAANA;AALmD,GAAX,CAA5C;AAQA,SACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAEoF,UADX;AAEI,IAAA,MAAM,EAAED,WAFZ;AAGI,IAAA,IAAI,EAAEG,SAHV;AAII,IAAA,MAAM,EAAET,MAJZ;AAKI,IAAA,IAAI,EAAEtF;AALV,KAOKtB,MAAM,CAACiE,GAAP,CAAW,UAAC8D,KAAD,EAAQC,CAAR,EAAc;AACtB,QAAIN,SAAS,CAACK,KAAD,CAAT,KAAwC5B,SAA5C,EAAuD;AACnD,aAAOuB,SAAS,CAACK,KAAD,CAAhB;AACH;;AAED,QAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC7B,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEC;AAAf,SAAmBzB,aAAa,CAACwB,KAAD,EAAQD,YAAR,CAAhC,CAAP;AACH;;AAED,WAAO,IAAP;AACH,GAVA,CAPL,CADJ;AAqBH,CAtID;;IAwIaG,QAAQ,GAAG,SAAXA,QAAW;AAAA,kCACpB/G,aADoB;AAAA,MACpBA,aADoB,oCACJrB,YAAY,CAACqB,aADT;AAAA,4BAEpBH,OAFoB;AAAA,MAEpBA,OAFoB,8BAEVlB,YAAY,CAACkB,OAFH;AAAA,iCAGpBC,YAHoB;AAAA,MAGpBA,YAHoB,mCAGLnB,YAAY,CAACmB,YAHR;AAAA,MAIpBF,KAJoB,SAIpBA,KAJoB;AAAA,MAKjBoH,UALiB;;AAAA,SAQpB,oBAAC,SAAD,EAAe;AAAEhH,IAAAA,aAAa,EAAbA,aAAF;AAAiBH,IAAAA,OAAO,EAAPA,OAAjB;AAA0BC,IAAAA,YAAY,EAAZA,YAA1B;AAAwCF,IAAAA,KAAK,EAALA;AAAxC,GAAf,EACI,oBAAC,aAAD;AAAyB,IAAA,aAAa,EAAEI;AAAxC,KAA2DgH,UAA3D,EADJ,CARoB;AAAA;;ICrJXC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAYC,KAAZ;AAAA,SAC9B,oBAAC,iBAAD,QACK;AAAA,QAAGvB,KAAH,QAAGA,KAAH;AAAA,QAAU1B,MAAV,QAAUA,MAAV;AAAA,WACG,oBAAC,QAAD;AAAoB,MAAA,KAAK,EAAE0B,KAA3B;AAAkC,MAAA,MAAM,EAAE1B;AAA1C,OAAsDiD,KAAtD,EADH;AAAA,GADL,CAD8B;AAAA;;;;"}