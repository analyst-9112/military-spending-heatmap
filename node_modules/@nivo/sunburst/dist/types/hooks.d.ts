import { SunburstCommonProps, ComputedDatum, DataProps, SunburstCustomLayerProps } from './types';
export declare const useSunburst: <RawDatum>({ data, id, value, valueFormat, radius, cornerRadius, colors, colorBy, inheritColorFromParent, childColor, }: {
    data: RawDatum;
    id?: string | ((datum: RawDatum) => import("csstype").AnimationIterationCountProperty) | undefined;
    value?: string | ((datum: RawDatum) => number) | undefined;
    valueFormat?: string | ((value: number) => string) | undefined;
    radius: number;
    cornerRadius?: number | undefined;
    colors?: string | import("@nivo/colors").OrdinalColorScaleConfigScheme | import("@nivo/colors").OrdinalColorScaleConfigDatumProperty | import("@nivo/colors").OrdinalColorScaleConfigCustomColors | import("@nivo/colors").OrdinalColorScaleConfigCustomFunction<Pick<ComputedDatum<RawDatum>, "data" | "path" | "height" | "id" | "value" | "percentage" | "formattedValue" | "arc" | "depth" | "parent">> | undefined;
    colorBy?: "id" | "depth" | undefined;
    inheritColorFromParent?: boolean | undefined;
    childColor?: string | import("@nivo/colors").InheritedColorConfigFromTheme | import("@nivo/colors").InheritedColorConfigFromContext | import("@nivo/colors").InheritedColorConfigCustomFunction<ComputedDatum<RawDatum>> | undefined;
}) => {
    arcGenerator: import("@nivo/arcs").ArcGenerator;
    nodes: ComputedDatum<RawDatum>[];
};
/**
 * Memoize the context to pass to custom layers.
 */
export declare const useSunburstLayerContext: <RawDatum>({ nodes, arcGenerator, centerX, centerY, radius, }: SunburstCustomLayerProps<RawDatum>) => SunburstCustomLayerProps<RawDatum>;
//# sourceMappingURL=hooks.d.ts.map