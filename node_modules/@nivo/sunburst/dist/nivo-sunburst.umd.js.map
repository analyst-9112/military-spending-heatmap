{"version":3,"file":"nivo-sunburst.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/SunburstTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/hooks.ts","../src/Arcs.tsx","../src/Sunburst.tsx","../src/ResponsiveSunburst.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const SunburstTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { ArcTransitionMode } from '@nivo/arcs'\nimport { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { SunburstTooltip } from './SunburstTooltip'\nimport { SunburstLayerId } from './types'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    cornerRadius: 0,\n    layers: ['arcs', 'arcLabels'] as SunburstLayerId[],\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    colorBy: 'id' as const,\n    inheritColorFromParent: true,\n    childColor: { from: 'color' },\n    borderWidth: 1,\n    borderColor: 'white',\n    enableArcLabels: false,\n    arcLabel: 'formattedValue',\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsSkipAngle: 0,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n    isInteractive: true,\n    defs: [],\n    fill: [],\n    tooltip: SunburstTooltip,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { useMemo } from 'react'\nimport { partition as d3Partition, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport sortBy from 'lodash/sortBy'\nimport { usePropertyAccessor, useTheme, useValueFormatter } from '@nivo/core'\nimport { Arc, useArcGenerator } from '@nivo/arcs'\nimport { useOrdinalColorScale, useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport {\n    SunburstCommonProps,\n    ComputedDatum,\n    DataProps,\n    DatumId,\n    SunburstCustomLayerProps,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useSunburst = <RawDatum>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    radius,\n    cornerRadius = defaultProps.cornerRadius,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n}: {\n    data: DataProps<RawDatum>['data']\n    id?: DataProps<RawDatum>['id']\n    value?: DataProps<RawDatum>['value']\n    valueFormat?: DataProps<RawDatum>['valueFormat']\n    radius: number\n    cornerRadius?: SunburstCommonProps<RawDatum>['cornerRadius']\n    colors?: SunburstCommonProps<RawDatum>['colors']\n    colorBy?: SunburstCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent?: SunburstCommonProps<RawDatum>['inheritColorFromParent']\n    childColor?: SunburstCommonProps<RawDatum>['childColor']\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const nodes: ComputedDatum<RawDatum>[] = useMemo(() => {\n        // d3 mutates the data for performance reasons,\n        // however it does not work well with reactive programming,\n        // this ensures that we don't mutate the input data\n        const clonedData = cloneDeep(data)\n\n        const hierarchy = d3Hierarchy(clonedData).sum(getValue)\n\n        const partition = d3Partition<RawDatum>().size([2 * Math.PI, radius * radius])\n        // exclude root node\n        const descendants = partition(hierarchy).descendants().slice(1)\n\n        const total = hierarchy.value ?? 0\n\n        // It's important to sort node by depth,\n        // it ensures that we assign a parent node\n        // which has already been computed, because parent nodes\n        // are going to be computed first\n        const sortedNodes = sortBy(descendants, 'depth')\n\n        return sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n            const id = getId(descendant.data)\n            // d3 hierarchy node value is optional by default as it depends on\n            // a call to `count()` or `sum()`, and we previously called `sum()`,\n            // d3 typings could be improved and make it non optional when calling\n            // one of those.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const value = descendant.value!\n            const percentage = (100 * value) / total\n            const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n            const arc: Arc = {\n                startAngle: descendant.x0,\n                endAngle: descendant.x1,\n                innerRadius: Math.sqrt(descendant.y0),\n                outerRadius: Math.sqrt(descendant.y1),\n            }\n\n            let parent: ComputedDatum<RawDatum> | undefined\n            if (descendant.parent) {\n                // as the parent is defined by the input data, and we sorted the data\n                // by `depth`, we can safely assume it's defined.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                parent = acc.find(node => node.id === getId(descendant.parent!.data))\n            }\n\n            const normalizedNode: ComputedDatum<RawDatum> = {\n                id,\n                path,\n                value,\n                percentage,\n                formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n                color: '',\n                arc,\n                data: descendant.data,\n                depth: descendant.depth,\n                height: descendant.height,\n            }\n\n            if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n                normalizedNode.color = getChildColor(parent)\n            } else {\n                normalizedNode.color = getColor(normalizedNode)\n            }\n\n            return [...acc, normalizedNode]\n        }, [])\n    }, [\n        data,\n        radius,\n        getValue,\n        getId,\n        valueFormat,\n        formatValue,\n        getColor,\n        inheritColorFromParent,\n        getChildColor,\n    ])\n\n    const arcGenerator = useArcGenerator({ cornerRadius })\n\n    return { arcGenerator, nodes }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useSunburstLayerContext = <RawDatum>({\n    nodes,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n}: SunburstCustomLayerProps<RawDatum>): SunburstCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n        }),\n        [nodes, arcGenerator, centerX, centerY, radius]\n    )\n","import React, { createElement, useMemo } from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { ComputedDatum, SunburstCommonProps, MouseHandlers } from './types'\nimport { useTooltip } from '@nivo/tooltip'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: SunburstCommonProps<RawDatum>['borderWidth']\n    borderColor: SunburstCommonProps<RawDatum>['borderColor']\n    isInteractive: SunburstCommonProps<RawDatum>['isInteractive']\n    onClick?: MouseHandlers<RawDatum>['onClick']\n    onMouseEnter?: MouseHandlers<RawDatum>['onMouseEnter']\n    onMouseMove?: MouseHandlers<RawDatum>['onMouseMove']\n    onMouseLeave?: MouseHandlers<RawDatum>['onMouseLeave']\n    tooltip: SunburstCommonProps<RawDatum>['tooltip']\n    transitionMode: SunburstCommonProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import React, { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { ArcLabelsLayer } from '@nivo/arcs'\nimport { defaultProps } from './props'\nimport { useSunburst, useSunburstLayerContext } from './hooks'\nimport { SunburstSvgProps, SunburstLayerId, SunburstLayer, ComputedDatum } from './types'\nimport { Arcs } from './Arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\n\ntype InnerSunburstProps<RawDatum> = Partial<\n    Omit<\n        SunburstSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerSunburst = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    cornerRadius = defaultProps.cornerRadius,\n    layers = defaultProps.layers as SunburstLayer<RawDatum>[],\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor,\n    margin: partialMargin,\n    width,\n    height,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    transitionMode = defaultProps.transitionMode,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    role = defaultProps.role,\n}: InnerSunburstProps<RawDatum>) => {\n    const { innerHeight, innerWidth, margin, outerHeight, outerWidth } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { centerX, centerY, radius } = useMemo(() => {\n        const radius = Math.min(innerWidth, innerHeight) / 2\n\n        return { radius, centerX: innerWidth / 2, centerY: innerHeight / 2 }\n    }, [innerHeight, innerWidth])\n\n    const { arcGenerator, nodes } = useSunburst({\n        data,\n        id,\n        value,\n        valueFormat,\n        radius,\n        cornerRadius,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill, {\n        dataKey: '.',\n        colorKey: 'color',\n        targetKey: 'fill',\n    })\n\n    const layerById: Record<SunburstLayerId, ReactNode> = {\n        arcs: null,\n        arcLabels: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={nodes}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                transitionMode={transitionMode}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={onMouseMove}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={nodes}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    const layerContext = useSunburstLayerContext<RawDatum>({\n        nodes,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            defs={boundDefs}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as SunburstLayerId] !== undefined) {\n                    return layerById[layer as SunburstLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sunburst = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    ...otherProps\n}: Partial<Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme }}>\n        <InnerSunburst<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Sunburst } from './Sunburst'\nimport { SunburstSvgProps } from './types'\n\ntype ResponsiveSunburstProps<RawDatum> = Partial<\n    Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveSunburst = <RawDatum,>(props: ResponsiveSunburstProps<RawDatum>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Sunburst<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","SunburstTooltip","id","formattedValue","color","React","BasicTooltip","defaultProps","value","cornerRadius","layers","colors","scheme","colorBy","inheritColorFromParent","childColor","from","borderWidth","borderColor","enableArcLabels","arcLabel","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","theme","animate","motionConfig","transitionMode","isInteractive","defs","fill","tooltip","role","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","useSunburst","data","valueFormat","radius","useTheme","getColor","useOrdinalColorScale","getChildColor","useInheritedColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","nodes","useMemo","clonedData","cloneDeep","hierarchy","d3Hierarchy","sum","partition","d3Partition","size","Math","PI","descendants","slice","total","sortedNodes","sortBy","reduce","acc","descendant","percentage","path","ancestors","map","ancestor","arc","startAngle","x0","endAngle","x1","innerRadius","sqrt","y0","outerRadius","y1","parent","find","node","normalizedNode","toFixed","depth","height","arcGenerator","useArcGenerator","useSunburstLayerContext","centerX","centerY","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","undefined","datum","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","ArcsLayer","InnerSunburst","partialMargin","margin","width","arcLabelsComponent","useDimensions","innerHeight","innerWidth","outerHeight","outerWidth","min","boundDefs","bindDefs","dataKey","colorKey","targetKey","layerById","arcs","arcLabels","includes","ArcLabelsLayer","layerContext","SvgWrapper","layer","i","Fragment","Sunburst","otherProps","Container","ResponsiveSunburst","props","ResponsiveWrapper"],"mappings":"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"}