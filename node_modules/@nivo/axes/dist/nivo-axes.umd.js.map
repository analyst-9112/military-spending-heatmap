{"version":3,"file":"nivo-axes.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/compute.ts","../src/components/AxisTick.tsx","../src/components/Axis.tsx","../src/props.ts","../src/components/Axes.tsx","../src/components/GridLine.tsx","../src/components/GridLines.tsx","../src/components/Grid.tsx","../src/canvas.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport {\n    AxisValue,\n    Point,\n    TicksSpec,\n    AnyScale,\n    ScaleWithBandwidth,\n    ValueFormatter,\n    Line,\n} from './types'\n\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const getScaleTicks = <Value extends AxisValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string' && 'useUTC' in scale) {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                const interval = timeType.every(Number(matches[1]))\n\n                if (interval) {\n                    return scale.ticks(interval)\n                }\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = <Value extends AxisValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends AxisValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return (d => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return (d3Format(format) as unknown) as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends AxisValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import React, { useMemo } from 'react'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\nimport { AxisTickProps, AxisValue } from '../types'\n\nexport const AxisTick = <Value extends AxisValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AnyScale, AxisProps, AxisValue } from '../types'\n\nexport const Axis = <Value extends AxisValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import React from 'react'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AnyScale, AxisProps, AxisValue } from '../types'\n\nexport const Axes = <X extends AxisValue, Y extends AxisValue>({\n    xScale,\n    yScale,\n    width,\n    height,\n    top,\n    right,\n    bottom,\n    left,\n}: {\n    xScale: AnyScale\n    yScale: AnyScale\n    width: number\n    height: number\n    top?: AxisProps<X>\n    right?: AxisProps<Y>\n    bottom?: AxisProps<X>\n    left?: AxisProps<Y>\n}) => {\n    const axes = { top, right, bottom, left }\n\n    return (\n        <>\n            {positions.map(position => {\n                const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                    ? AxisProps<X> | undefined\n                    : AxisProps<Y> | undefined\n\n                if (!axis) return null\n\n                const isXAxis = position === 'top' || position === 'bottom'\n                const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n                return (\n                    <Axis\n                        key={position}\n                        {...axis}\n                        axis={isXAxis ? 'x' : 'y'}\n                        x={position === 'right' ? width : 0}\n                        y={position === 'bottom' ? height : 0}\n                        scale={isXAxis ? xScale : yScale}\n                        length={isXAxis ? width : height}\n                        ticksPosition={ticksPosition}\n                    />\n                )\n            })}\n        </>\n    )\n}\n","import React from 'react'\nimport { SpringValues, animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = ({\n    animatedProps,\n}: {\n    animatedProps: SpringValues<{\n        opacity: number\n        x1: number\n        x2: number\n        y1: number\n        y2: number\n    }>\n}) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n}\n","import React from 'react'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = ({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\nimport { AnyScale, AxisValue } from '../types'\n\nexport const Grid = <X extends AxisValue, Y extends AxisValue>({\n    width,\n    height,\n    xScale,\n    yScale,\n    xValues,\n    yValues,\n}: {\n    width: number\n    height: number\n    xScale?: AnyScale\n    xValues?: number | X[]\n    yScale?: AnyScale\n    yValues?: number | Y[]\n}) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues, width, height])\n\n    const yLines = useMemo(() => {\n        if (!yScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: yScale,\n            axis: 'y',\n            values: yValues,\n        })\n    }, [height, width, yScale, yValues])\n\n    return (\n        <>\n            {xLines && <GridLines lines={xLines} />}\n            {yLines && <GridLines lines={yLines} />}\n        </>\n    )\n}\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport {\n    AxisValue,\n    TicksSpec,\n    AnyScale,\n    AxisLegendPosition,\n    CanvasAxisProp,\n    ValueFormatter,\n} from './types'\n\nexport const renderAxisToCanvas = <Value extends AxisValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends AxisValue, Y extends AxisValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X>\n        right?: CanvasAxisProp<Y>\n        bottom?: CanvasAxisProp<X>\n        left?: CanvasAxisProp<Y>\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends AxisValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"names":["defineProperty","centerScale","scale","bandwidth","offset","round","Math","d","timeByType","millisecond","timeMillisecond","utcMillisecond","second","timeSecond","utcSecond","minute","timeMinute","utcMinute","hour","timeHour","utcHour","day","timeDay","utcDay","week","timeWeek","utcWeek","sunday","timeSunday","utcSunday","monday","timeMonday","utcMonday","tuesday","timeTuesday","utcTuesday","wednesday","timeWednesday","utcWednesday","thursday","timeThursday","utcThursday","friday","timeFriday","utcFriday","saturday","timeSaturday","utcSaturday","month","timeMonth","utcMonth","year","timeYear","utcYear","timeTypes","Object","keys","timeIntervalRegexp","RegExp","join","isInteger","value","isFinite","floor","isArray","Array","getScaleTicks","spec","undefined","ticks","matches","match","timeType","useUTC","interval","every","Number","Error","domain","computeCartesianTicks","axis","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","textProps","textPropsByEngine","position","line","lineX","lineY","text","textX","textY","isRTL","document","dir","translate","textAlign","align","center","textBaseline","baseline","x","y","top","bottom","left","right","map","key","getFormatter","format","type","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","lineValues","lineCount","lines","x1","x2","y1","y2","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","React","animated","transform","textTransform","Axis","length","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","dominantBaseline","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","createElement","rotate","axisPropTypes","PropTypes","oneOf","oneOfType","number","arrayOf","string","instanceOf","func","node","bool","axisPropType","shape","positions","Axes","xScale","yScale","axes","isXAxis","GridLine","grid","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontSize","fontFamily","strokeWidth","lineWidth","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","forEach","degreesToRadians","fill","fillStyle","fillText","String","restore","fontWeight","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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"}